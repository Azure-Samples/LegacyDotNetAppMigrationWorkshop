name: Build and deploy container app to Azure Kubernetes Service

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
   id-token: write
   contents: read
   actions: read

jobs:
  build:
    runs-on: 'windows-latest'

    steps:
    - uses: actions/checkout@v2
        
    - uses: azure/docker-login@v1
      with:
        login-server: https://${{ secrets.ACR_Name }}.azurecr.io/
        username: ${{ secrets.ACR_ContainerUsername }}
        password: ${{ secrets.ACR_ContainerPassword }}

    - run: |
        docker build -t ${{ secrets.ACR_Name }}.azurecr.io/ibuyspyv3:${{ github.sha }} -f app/web/Dockerfile .
        docker push ${{ secrets.ACR_Name }}.azurecr.io/ibuyspyv3:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - uses: actions/checkout@v2
      
      # Uses OIDC token to login to Azure
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Set the target Azure Kubernetes Service (AKS) cluster. 
      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}

       # Create namespace if doesn't exist
      - name: Create namespace
        run: |
          kubectl create namespace windowsapp --dry-run=client -o json | kubectl apply -f -

      # Deploy app to AKS
      - name: Deploy to AKS
        uses: azure/k8s-deploy@v4
        with:
          manifests: |
            manifests/deployment.yaml
          images: |
            ${{ secrets.ACR_Name }}.azurecr.io/ibuyspyv3:${{ github.sha }}
          namespace: windowsapp

