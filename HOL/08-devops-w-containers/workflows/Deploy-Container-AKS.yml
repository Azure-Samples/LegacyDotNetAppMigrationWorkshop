name: Build and deploy container app to Azure Kubernetes Service

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
   id-token: write
   contents: read
   actions: read

jobs:
  build:
    runs-on: 'windows-latest'

    steps:
    - uses: actions/checkout@v2
        
    - uses: azure/docker-login@v1
      with:
        login-server: https://${{ secrets.ACR_Name }}.azurecr.io/
        username: ${{ secrets.AzureAppService_ContainerUsername }}
        password: ${{ secrets.AzureAppService_ContainerPassword }}

    - run: |
        docker build -t ${{ secrets.ACR_Name }}.azurecr.io/ibuyspyv3:${{ github.sha }} -f app/web/Dockerfile .
        docker push ${{ secrets.ACR_Name }}.azurecr.io/ibuyspyv3:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest

    needs: build

    # Uses OIDC token to login to Azure
   - uses: azure/login@v1
     with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - uses: azure/setup-kubectl@v2.0

    # Set the target Azure Kubernetes Service (AKS) cluster. 
    - uses: azure/aks-set-context@v3
      with:
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}

     # Create namespace if doesn't exist
    - run: |
        kubectl create namespace windowsapp --dry-run=client -o json | kubectl apply -f -

    # Deploy app to AKS
    - uses: azure/k8s-deploy@v4
      with:
        manifests: |
          ${{ github.workspace }}/manifests/deployment.yaml
        images: |
          ${{ env.ACR_Name }}.azurecr.io/ibuyspyv3:${{ github.sha }}
        namespace: windowsapp


