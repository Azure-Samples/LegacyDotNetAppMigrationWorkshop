// ------
// Scopes
// ------

targetScope = 'subscription'

// -------
// Modules
// -------

module groups './modules/groups/resources.bicep' = {
  name: 'Microsoft.Resources.BulkAppServiceGroups'
  scope: subscription()
  params: {
    config: mergedConfig
  }
}

// Apps from Israel's repo: Classifieds, TimeTracker, and Jobs
module components2008R2 './modules/components/resources.bicep' = [for number in range(1,config2008.numberVms): {
  name: 'Microsoft.Resources.VM2008${number}'
  scope: resourceGroup(config2008.resourceGroup)
  params: {
    config: config2008
    imageRef: imagesRefs[0]
    year: '2008'
    number: string(number)
  }
  dependsOn: [
    groups
  ]
}]

// TBD
module components2012 './modules/components/resources.bicep' = [for number in range(1,config2012.numberVms): {
  name: 'Microsoft.Resources.VM2012${number}'
  scope: resourceGroup(config2012.resourceGroup)
  params: {
    config: config2012
    year: '2012'
    imageRef: imagesRefs[1]
    number: string(number)
  }
  dependsOn: [
    groups
  ]
}]

// TBD
module components2016 './modules/components/resources.bicep' = [for number in range(1,config.numberVms): {
  name: 'Microsoft.Resources.VM2016${number}'
  scope: resourceGroup(config.resourceGroup)
  params: {
    config: config
    year: '2016'
    imageRef: imagesRefs[2]
    number: string(number)
  }
  dependsOn: [
    groups
  ]
}]

// eShop Modernized app
module components2019 './modules/components/resources.bicep' = [for number in range(1,config2019.numberVms): {
  name: 'Microsoft.Resources.VM2019${number}'
  scope: resourceGroup(config2019.resourceGroup)
  params: {
    config: config2019
    year: '2019'
    imageRef: imagesRefs[3]
    number: string(number)
  }
  dependsOn: [
    groups
  ]
}]


// eShop Modernized app
module components2022 './modules/components/resources.bicep' = [for number in range(1,configDefault.numberVms): {
  name: 'Microsoft.Resources.VM2022${number}'
  scope: resourceGroup(configDefault.resourceGroup)
  params: {
    config: configDefault
    year: '2022'
    imageRef: imagesRefs[4]
    number: string(number)
  }
  dependsOn: [
    groups
  ]
}]

module windows10 './modules/components/resources.client.bicep' =  {
  name: 'Microsoft.Resources.VM10'
  scope: resourceGroup(config.resourceGroup)
  params: {
    config: config
    year: 'w10'
    imageRef: imagesRefs[5]
  }
  dependsOn: [
    groups
  ]
}

module windows11 './modules/components/resources.client.bicep' = {
  name: 'Microsoft.Resources.VM11'
  scope: resourceGroup(config.resourceGroup)
  params: {
    config: config
    year: 'w11'
    imageRef: imagesRefs[6]
  }
  dependsOn: [
    groups
  ]
}

// module storage './modules/storage/resources.bicep' = if (mergedConfig.createStorage) {
//   name: 'Microsoft.Resources.BulkAppServiceStorage'
//   scope: resourceGroup(mergedConfig.resourceGroup)
//   params: {
//     config: mergedConfig
//   }
//   dependsOn: [
//     groups
//   ]
// }

// ---------
// Variables
// ---------

var mergedConfig = union(loadJsonContent('defaults.json'), config)

// ----------
// Parameters
// ----------

// param config object = loadJsonContent('configs/main.json')
var config = loadJsonContent('configs/main.json')

var config2008 = union(loadJsonContent('configs/main.json'),
  { 
    initScript: loadTextContent('scripts/post-config-win2k8r2-sql.ps1')
    numberVms: 2
  })

var config2012= union(loadJsonContent('configs/main.json'),
{ 
  initScript: loadTextContent('scripts/config_default.ps1')
  numberVms: 2
})

var configDefault= union(loadJsonContent('configs/main.json'),
{ 
  initScript: loadTextContent('scripts/config_default.ps1')
})

var config2019 = union(loadJsonContent('configs/main.json'),
{ 
  initScript: loadTextContent('scripts/config_win2019.ps1')
})

param imagesRefs array = loadJsonContent('configs/imagerefs.json')

// ----------
// Outputs
// ----------

//we do not return or log the vm password since that was passed as a param
output appliedConfig object  = mergedConfig
// output storage object = storage
// output virtualmachines array = [for i in range(0, config.numberVms - 1): { 
//     i: components2008R2[i].outputs 
// }]

